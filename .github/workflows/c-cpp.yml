name: Build and Release

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  BUILD_TYPE: Release
  CUDA_VERSION: '12.9.0'

jobs:
  provision-vm:
    name: Startup
    runs-on: ubuntu-latest
    outputs:
      vm_name: ${{ steps.create-vm.outputs.vm_name }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Azure Login
      uses: azure/login@v2.3.0
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Create VM
      id: create-vm
      env:
        GITHUB_RUN_ID: ${{ github.run_id }}
        GITHUB_RUN_ATTEMPT: ${{ github.run_attempt }}
        ADMIN_PASSWORD: ${{ secrets.VM_ADMIN_PASSWORD }}
      run: .github/scripts/provision-gpu-runner.sh


  build:
    name: Build
    runs-on: [self-hosted, gpu, cuda, windows]
    needs: [provision-vm]
    
    strategy:
      matrix:
        include:
          - name: "Windows-x64-Release"
            architecture: x64
            build_config: Release

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Configure CMake
      run: |
        cmake --preset=windows-release
      shell: powershell

    - name: Build
      run: cmake --build build/windows-release --config ${{ matrix.build_config }} -j 4
      shell: powershell

    - name: Test
      run: ctest --test-dir build/windows-release -C Release --output-on-failure
      shell: powershell

    - name: Build Installer
      run: cd build/windows-release && cpack -C Release -G NSIS
      shell: powershell

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4.6.2
      with:
        name: cuda-build-windows-x64
        path: |
          build/windows-release/lib/cudaphash.lib
          build/windows-release/_CPack_Packages/win64/NSIS/*.exe
        retention-days: 1

  shutdown-vm:
    name: Shutdown
    runs-on: ubuntu-latest
    needs: [provision-vm, build]
    if: always()
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v2.3.0
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Delete VM
      env:
        GITHUB_RUN_ID: ${{ github.run_id }}
        GITHUB_RUN_ATTEMPT: ${{ github.run_attempt }}
      run: .github/scripts/cleanup-gpu-runner.sh
