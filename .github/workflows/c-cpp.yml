name: Build and Release

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  BUILD_TYPE: Release
  CUDA_VERSION: '12.9.1'

jobs:
  build:
    runs-on: windows-latest
    
    strategy:
      matrix:
        include:
          - name: "Windows-x64-Release"
            architecture: x64
            build_config: Release

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup CUDA
      uses: Jimver/cuda-toolkit@master
      id: cuda-toolkit
      with:
        cuda: ${{ env.CUDA_VERSION }}
        method: 'network'
        sub-packages: '["nvcc", "cudart", "visual_studio_integration", "nvjpeg", "nvjpeg_dev", "cufft", "cublas"]'
        log-file-suffix: 'win-64.txt'
        use-github-cache: false
        use-local-cache: false

    - name: Setup MSVC
      uses: TheMrMilchmann/setup-msvc-dev@v4
      with:
        arch: ${{ matrix.architecture }}

    - name: Configure CMake
      run: |
        cmake --preset=windows-release
          -DCMAKE_CUDA_COMPILER="${{ steps.cuda-toolkit.outputs.cuda-path }}/bin/nvcc.exe"
      shell: powershell

    - name: Build
      run: cmake --build build/windows-release --config ${{ matrix.build_config }}
      shell: powershell

    - name: Run Tests
      #working-directory: build
      run: ctest --test-dir build/windows-release -C Release --output-on-failure --verbose
      shell: powershell
      continue-on-error: false

    - name: Prepare Artifacts
      if: success()
      run: |
        New-Item -ItemType Directory -Force -Path artifacts

        Copy-Item -Path "build/windows-release/${{ matrix.build_config }}/bin/cudaphash.exe" -Destination artifacts/ -Force -ErrorAction SilentlyContinue

        Copy-Item -Path "build/windows-release/${{ matrix.build_config }}/lib/cudaphash.lib" -Destination artifacts/ -Force -ErrorAction SilentlyContinue
        
        Copy-Item -Path "build/windows-release/${{ matrix.build_config }}/lib/nvjpeg64_*.dll" -Destination artifacts/ -Force -ErrorAction SilentlyContinue
        Copy-Item -Path "build/windows-release/${{ matrix.build_config }}/lib/cublas64_*.dll" -Destination artifacts/ -Force -ErrorAction SilentlyContinue
        Copy-Item -Path "build/windows-release/${{ matrix.build_config }}/lib/cublasLt64_*.dll" -Destination artifacts/ -Force -ErrorAction SilentlyContinue
        
        Compress-Archive -Path artifacts/* -DestinationPath "${{ matrix.name }}-${{ github.sha }}.zip"
      shell: powershell

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.name }}-artifacts
        path: |
          artifacts/
          *.zip
        retention-days: 30

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.name }}-test-results
        path: build/Testing/
        retention-days: 7

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    permissions:
      contents: write
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: release-artifacts

    - name: Prepare Release Assets
      run: |
        cd release-artifacts
        for dir in */; do
          if [[ $dir == *"-artifacts"* ]]; then
            cd "$dir"
            zip -r "../${dir%-artifacts/}.zip" *
            cd ..
          fi
        done

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        generate_release_notes: true
        files: |
          release-artifacts/*.zip
        body: |
          ## Release ${{ github.ref_name }}
          
          ### Build Information
          - Build Type: ${{ env.BUILD_TYPE }}
          - CUDA Version: ${{ env.CUDA_VERSION }}
          - Commit: ${{ github.sha }}
